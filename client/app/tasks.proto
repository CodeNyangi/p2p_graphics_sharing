syntax = "proto3";

package tasks;

// Define a service for handling GPU-related tasks and training sessions
service TaskService {
  rpc RentAndStartSession(RentAndStartSessionRequest) returns (SessionResponse);
  rpc UpdateTraining(UpdateTrainingRequest) returns (GenericResponse);
  rpc ChangeAggregator(ChangeAggregatorRequest) returns (GenericResponse);
  rpc ReleaseGPU(ReleaseGPURequest) returns (GenericResponse);
}

// Request messages
message RentAndStartSessionRequest {
  int32 gpu_id = 1;
  int32 compute_units = 2;
  string model = 3;
  string dataset = 4;
}

message UpdateTrainingRequest {
  int32 session_id = 1;
  int32 epoch = 2;
  string parameter_hash = 3;
}

message ChangeAggregatorRequest {
  int32 session_id = 1;
  string new_aggregator = 2;
}

message ReleaseGPURequest {
  int32 gpu_id = 1;
}

// Response messages
message SessionResponse {
  int32 session_id = 1;
}

message GenericResponse {
  string status = 1;
}
